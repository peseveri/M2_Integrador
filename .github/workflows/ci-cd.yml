name: Pipeline ETL CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Paso 1: Crea los directorios de salida vacíos en el sistema de archivos del runner
      # ¡CORRECCIÓN AQUÍ! Este paso se mueve al principio para garantizar que las carpetas existan.
      - name: Create data directories
        run: |
          mkdir -p Avance2_3_4/raw_data
          mkdir -p Avance2_3_4/silver_data
          mkdir -p Avance2_3_4/gold_data

      # Paso 2: Copia el archivo CSV a la carpeta raw_data
      - name: Copy raw data file to raw_data folder
        run: cp Avance2_3_4/data_sources/AB_NYC.csv Avance2_3_4/raw_data/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Paso 3: Construye las imágenes de Docker para el pipeline ETL
      - name: Build Docker images
        working-directory: Avance2_3_4
        run: |
          docker build -f Dockerfile.ingesta -t etl-ingesta:v1 .
          docker build -f Dockerfile.transform -t etl-transform:v1 .

      # Paso 4: Ejecuta la tarea de ingesta, montando el volumen
      - name: Run Ingest Data Task
        run: docker run --rm -v ${{ github.workspace }}/Avance2_3_4/raw_data:/app/data_sources etl-ingesta:v1

      # Paso 5: Ejecuta la tarea de transformación, montando los volúmenes
      - name: Run Transform Data Task
        run: docker run --rm -v ${{ github.workspace }}/Avance2_3_4/raw_data:/app/data -v ${{ github.workspace }}/Avance2_3_4/silver_data:/app/silver_data -v ${{ github.workspace }}/Avance2_3_4/gold_data:/app/gold_data etl-transform:v1

      - name: Set up Python for tests
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas pyarrow

      # Paso 6: Ejecuta las pruebas de validación
      - name: Run data validation tests
        run: python Avance2_3_4/test_pipeline.py

      # Paso 7: Limpia los contenedores
      - name: Clean up Docker containers
        if: always()
        run: docker compose -f Avance2_3_4/docker-compose.yml down
